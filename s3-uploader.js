// Generated by CoffeeScript 1.8.0
(function() {
  angular.module('s3-uploader', []).provider("S3Uploader", function() {
    var provider;
    provider = {
      $get: [
        '$q', 'randomString', function($q, randomString) {
          return {
            upload: function(file) {
              var bucket, deferred, filename, params;
              AWS.config.update({
                accessKeyId: provider.credentials.access_key,
                secretAccessKey: provider.credentials.secret_key
              });
              AWS.config.region = provider.credentials.region;
              bucket = new AWS.S3({
                params: {
                  Bucket: provider.credentials.bucket
                },
                signatureVersion: 'v4'
              });
              filename = randomString(15) + '_' + file.name;
              params = {
                Key: filename,
                ContentType: file.type,
                Body: file,
                ACL: 'public-read'
              };
              deferred = $q.defer();
              bucket.putObject(params, function(err, data) {
                var file_url, request;
                if (err) {
                  return deferred.reject(err);
                } else {
                  request = this.request.httpRequest;
                  file_url = request.endpoint.protocol + '//' + request.endpoint.host + request.path;
                  return deferred.resolve(file_url);
                }
              }).on('httpUploadProgress', function(progress) {
                return deferred.notify(Math.round(progress.loaded / progress.total * 100));
              });
              return deferred.promise;
            }
          };
        }
      ],
      credentials: {
        access_key: '',
        secret_key: '',
        bucket: '',
        region: ''
      }
    };
    return provider;
  }).directive('remoteUpload', [
    'S3Uploader', '$parse', '$compile', function(S3Uploader, $parse, $compile) {
      return {
        require: 'ngModel',
        restrict: 'A',
        scope: {
          model: '=ngModel'
        },
        link: function(scope, elem, attrs) {
          var fieldName, isDrop;
          scope.file = null;
          isDrop = angular.isDefined(attrs.dragdrop);
          if (isDrop) {
            elem.attr('ng-file-drop', '');
            elem.attr('allowDir', 'false');
          } else {
            elem.attr('ng-file-select', '');
          }
          elem.removeAttr('remote-upload');
          elem.attr('ng-model', 'file');
          elem.attr('accept', 'image/*');
          elem.attr('ng-multiple', 'false');
          $compile(elem)(scope);
          fieldName = $parse(attrs.name);
          return scope.$watch('file', function(value) {
            if (value) {
              fieldName.assign(scope.$parent, {
                progress: 0
              });
              return S3Uploader.upload(value[0]).then(function(filename) {
                return scope.model = filename;
              }, function(rejection) {
                return fieldName.assign(scope.$parent, {
                  error: rejection,
                  progress: 0
                });
              }, function(progress) {
                return fieldName.assign(scope.$parent, {
                  progress: progress
                });
              });
            }
          });
        }
      };
    }
  ]);

}).call(this);
